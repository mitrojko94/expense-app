{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darko\\\\Desktop\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\UI\\\\Card.js\";\n//U webu kad se cuje card to se odnosi na izgled kontejnera, sa senkama, ivicama i slicno\nimport \"./Card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  const classes = \"card \" + props.className; //Svaka vrednost koja je postavljena className props dodaje se na ovaj dugacak string\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Card;\nexport default Card; //children je rezervisano ime i vrednost njega ce uvek biti sadrzaj izmedju otvorenih i zatvorenih tagova custom komponenti\n//Ovim sam dobio to sto sam izbrisao duplikat kodove iz CSS fajlova\n//Takodje, uspeli smo da ekstraktujemo HTML kod(lidija koda 6). Uspevsi da ekstraktujemo, omogucavamo spanjenje duplikata koda\n//Ovo je drugi aspekt \"kompozicije\". Mi sastavljamo sadrzaj ExpenseItema koristeci Car kao wrapper, koristeci neke ugradjene HTML elemente. Sve ove komponente i elementi su sastavljeni zajedno i na kraju prave ceo UI(korisnicki interfejs)\n//Kad god kombinujem komponente, koristim kompoziciju\n//Bitna stvar kompozicije je props.children osobina koja omogucava da se kreiraju wrapper komponente koje su specijalne vrste komponenti\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/Darko/Desktop/01-starting-setup/src/components/Expenses/UI/Card.js"],"names":["Card","props","classes","className","children"],"mappings":";AAAA;AACA,OAAO,YAAP;;;AAEA,SAASA,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAMC,OAAO,GAAG,UAAUD,KAAK,CAACE,SAAhC,CADmB,CACwB;;AAC3C,sBAAO;AAAK,IAAA,SAAS,EAAED,OAAhB;AAAA,cAA0BD,KAAK,CAACG;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAHQJ,I;AAKT,eAAeA,IAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["//U webu kad se cuje card to se odnosi na izgled kontejnera, sa senkama, ivicama i slicno\r\nimport \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className; //Svaka vrednost koja je postavljena className props dodaje se na ovaj dugacak string\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n\r\n//children je rezervisano ime i vrednost njega ce uvek biti sadrzaj izmedju otvorenih i zatvorenih tagova custom komponenti\r\n//Ovim sam dobio to sto sam izbrisao duplikat kodove iz CSS fajlova\r\n//Takodje, uspeli smo da ekstraktujemo HTML kod(lidija koda 6). Uspevsi da ekstraktujemo, omogucavamo spanjenje duplikata koda\r\n\r\n//Ovo je drugi aspekt \"kompozicije\". Mi sastavljamo sadrzaj ExpenseItema koristeci Car kao wrapper, koristeci neke ugradjene HTML elemente. Sve ove komponente i elementi su sastavljeni zajedno i na kraju prave ceo UI(korisnicki interfejs)\r\n//Kad god kombinujem komponente, koristim kompoziciju\r\n//Bitna stvar kompozicije je props.children osobina koja omogucava da se kreiraju wrapper komponente koje su specijalne vrste komponenti\r\n"]},"metadata":{},"sourceType":"module"}