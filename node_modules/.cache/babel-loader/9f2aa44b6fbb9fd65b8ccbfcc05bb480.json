{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darko\\\\Desktop\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpenseDate.js\";\nimport \"./ExpenseDate.css\";\nimport Expenses from \"./Expenses\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseDate(props) {\n  //Treba mu parametar props, da bi ekstraktovao podatke\n  const month = props.date.toLocaleString(\"en-US\", {\n    month: \"long\"\n  });\n  const day = props.date.toLocaleString(\"en-US\", {\n    day: \"2-digit\"\n  });\n  const year = props.date.getFullYear();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-date\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-date__month\",\n      children: month\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-date__year\",\n      children: year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-date__day\",\n      children: day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ExpenseDate;\nexport default ExpenseDate; //A CLOSER LOOK AT JSX\n//Otvorim konzolu, idem u tab source i otvorim neki js fajl i tu mogu da nadjem moju f-ju, samo sto ce biti drugacija nego sto sam je ja kucao. To je zato sto pretrazivac ne podrzava JSX kod\n//Na internetu dobijem kod koji je transformisan vec\n//Mozemo da napisemo kod koji ce biti razumljiviji ljudima za citanje, ali opet nece biti tako razumljiv kao JSX kod\n//U fajlu package.json imam dva dependencies koja imaju veze sa Reactom(React, React-dom). React-dom koristim u index.js fajlu, dok samo React ne koristim nigde\n//Pre je u svakom fajlu moralo da se ucita 'import React from \"react\"', tj. u svakom fajlu gde se koristi JSX, jer je zapravo JSX samo sintakticki secer. To se transformise u metode koje su pozvane od strane React objekta, zato smo morali pre da importujemo React\n//Kod bez upotrebe JSX sintakse!\n//Prvi parametar element koji treba biti kreiran, na primer div(ako je u pitanju HTML element, samo prosledim to ime u vidu stringa)\n//Drugi parametar je objekat koji konfigurise ovaj element, objekat koji postavlja sve atribute ovog elementa\n//Treci parametar je sadrzaj izmedju otvorenih i zatvorenih div tagova. Ne mora da bude zadnji parametar, jer moze biti mnogo parametar koji imaju neki sadrzaju izmedju otvorenih i zatvorenih tagova, kao i primeru ispod\n//Ako je element koji se kreira od neke druge komponente, samo prosledim ime te komponente, bez stringa. I ako taj element ima neke atribute, prosledim ih kao key-value par\n//Ovako se kreira kod automatski, ispod haube, kad se koristi JSX kod\n// return React.createElement(\n//   \"div\",\n//   {},\n//   React.createElement(\"h2\", {}, \"Neki string\"),\n//   React.createElement(Expenses, { items: expenses })\n// );\n//Uvek je potrebno imati neki wrapper, tipa div, jer je moguce kreirati samo jedan element i vratiti ga, a u okviru tog elementa mozes imati jos mnogo elemenata\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseDate\");","map":{"version":3,"sources":["C:/Users/Darko/Desktop/01-starting-setup/src/components/Expenses/ExpenseDate.js"],"names":["Expenses","ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear"],"mappings":";AAAA,OAAO,mBAAP;AACA,OAAOA,QAAP,MAAqB,YAArB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B;AACA,QAAMC,KAAK,GAAGD,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAmC;AAAEF,IAAAA,KAAK,EAAE;AAAT,GAAnC,CAAd;AACA,QAAMG,GAAG,GAAGJ,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAmC;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAnC,CAAZ;AACA,QAAMC,IAAI,GAAGL,KAAK,CAACE,IAAN,CAAWI,WAAX,EAAb;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,gBAAsCL;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBAAqCI;AAArC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KAbQL,W;AAeT,eAAeA,WAAf,C,CAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import \"./ExpenseDate.css\";\r\nimport Expenses from \"./Expenses\";\r\n\r\nfunction ExpenseDate(props) {\r\n  //Treba mu parametar props, da bi ekstraktovao podatke\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n\r\n//A CLOSER LOOK AT JSX\r\n\r\n//Otvorim konzolu, idem u tab source i otvorim neki js fajl i tu mogu da nadjem moju f-ju, samo sto ce biti drugacija nego sto sam je ja kucao. To je zato sto pretrazivac ne podrzava JSX kod\r\n//Na internetu dobijem kod koji je transformisan vec\r\n//Mozemo da napisemo kod koji ce biti razumljiviji ljudima za citanje, ali opet nece biti tako razumljiv kao JSX kod\r\n\r\n//U fajlu package.json imam dva dependencies koja imaju veze sa Reactom(React, React-dom). React-dom koristim u index.js fajlu, dok samo React ne koristim nigde\r\n//Pre je u svakom fajlu moralo da se ucita 'import React from \"react\"', tj. u svakom fajlu gde se koristi JSX, jer je zapravo JSX samo sintakticki secer. To se transformise u metode koje su pozvane od strane React objekta, zato smo morali pre da importujemo React\r\n\r\n//Kod bez upotrebe JSX sintakse!\r\n\r\n//Prvi parametar element koji treba biti kreiran, na primer div(ako je u pitanju HTML element, samo prosledim to ime u vidu stringa)\r\n//Drugi parametar je objekat koji konfigurise ovaj element, objekat koji postavlja sve atribute ovog elementa\r\n//Treci parametar je sadrzaj izmedju otvorenih i zatvorenih div tagova. Ne mora da bude zadnji parametar, jer moze biti mnogo parametar koji imaju neki sadrzaju izmedju otvorenih i zatvorenih tagova, kao i primeru ispod\r\n//Ako je element koji se kreira od neke druge komponente, samo prosledim ime te komponente, bez stringa. I ako taj element ima neke atribute, prosledim ih kao key-value par\r\n//Ovako se kreira kod automatski, ispod haube, kad se koristi JSX kod\r\n// return React.createElement(\r\n//   \"div\",\r\n//   {},\r\n//   React.createElement(\"h2\", {}, \"Neki string\"),\r\n//   React.createElement(Expenses, { items: expenses })\r\n// );\r\n\r\n//Uvek je potrebno imati neki wrapper, tipa div, jer je moguce kreirati samo jedan element i vratiti ga, a u okviru tog elementa mozes imati jos mnogo elemenata\r\n"]},"metadata":{},"sourceType":"module"}