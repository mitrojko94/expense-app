{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darko\\\\Desktop\\\\01-starting-setup\\\\src\\\\components\\\\ExpenseItem.js\";\n//Komponenta u Reactu je samo JS f-ja\n//Ime f-je skoro uvek da bude kao ime fajla. To je jako pozeljno\nimport \"./ExpenseItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseItem() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Date: March 28th, 2022\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Title: Car Insurance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Amount: $294.67\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n} //Eksportovao sam ime f-je, da bih mogao da koristim. Posto je export default, prilikom importa moze biti bilo koje ime\n\n\n_c = ExpenseItem;\nexport default ExpenseItem; //U React fajlovima uvek moram imati jedan root element po returnu, tipa moram imati samo return div, ne mogu imati return div, div i slicno. To nije dozvoljeno, da ima vise root elemenata po returnu\n//Da bih resio taj problem, stavim sve to u jedan div, stavim u zagrade sve to i radice. Kao sto je uradjeno u primeru iznad\n//Jako je bitno imati samo jedan root element, a u okviru njega, moze biti mnogo elemenata\n//U Reactu kad hocu da dodam neki css fajl, importujem samo putanju do njega i dole kad stavljam u kod, ne koristim class, vec className\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["C:/Users/Darko/Desktop/01-starting-setup/src/components/ExpenseItem.js"],"names":["ExpenseItem"],"mappings":";AAAA;AACA;AACA,OAAO,mBAAP;;;AAEA,SAASA,WAAT,GAAuB;AACrB,sBACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,C,CAED;;;KAZSA,W;AAaT,eAAeA,WAAf,C,CAEA;AACA;AACA;AAEA","sourcesContent":["//Komponenta u Reactu je samo JS f-ja\r\n//Ime f-je skoro uvek da bude kao ime fajla. To je jako pozeljno\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem() {\r\n  return (\r\n    <div className=\"\">\r\n      <div>Date: March 28th, 2022</div>\r\n      <div>\r\n        <h2>Title: Car Insurance</h2>\r\n      </div>\r\n      <div>Amount: $294.67</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//Eksportovao sam ime f-je, da bih mogao da koristim. Posto je export default, prilikom importa moze biti bilo koje ime\r\nexport default ExpenseItem;\r\n\r\n//U React fajlovima uvek moram imati jedan root element po returnu, tipa moram imati samo return div, ne mogu imati return div, div i slicno. To nije dozvoljeno, da ima vise root elemenata po returnu\r\n//Da bih resio taj problem, stavim sve to u jedan div, stavim u zagrade sve to i radice. Kao sto je uradjeno u primeru iznad\r\n//Jako je bitno imati samo jedan root element, a u okviru njega, moze biti mnogo elemenata\r\n\r\n//U Reactu kad hocu da dodam neki css fajl, importujem samo putanju do njega i dole kad stavljam u kod, ne koristim class, vec className\r\n"]},"metadata":{},"sourceType":"module"}